//modal animation
.ModalOpen {
    opacity: 1;
    transform: translateY(0);
}

.ModalClosed {
    opacity: 0;
    transform: translateY(-100%);
}

//to specify the animation timing

.ModalOpen {
    animation: openModal 0.4s ease-out forwards;
}

.ModalClosed {
    animation: closeModal 0.4s ease-out forwards;
}

@keyframes openModal {
    0% {
        opacity: 0;
        transform: translateY(-100%);
    }
    50% {
        opacity: 1;
        transform: translateY(20%);
    }
    100% {
        opacity: 1;
        transform: translateY(0%);
    }
}

@keyframes closeModal {
    0% {
        opacity: 1;
        transform: translateY(0%);
    }
    50% {
        opacity: 0.8;
        transform: translateY(60%);
    }
    100% {
        opacity: 0;
        transform: translateY(-100%);
    }
}


//react transition group:
npm i react-transition-group

<Transition
    in={this.state.showBlock}
    timeout={1000}
    mountOnEnter
    unmountOnExit
>
    {(state) => (
    <div
        style={{
        backgroundColor: "red",
        width: 100,
        height: 100,
        margin: "auto",
        transition: "opacity 1s ease-out",
        opacity: state === "exiting" ? 0 : 1,
        }}
    />
    )}
</Transition>
by setting this in property, this decides whether the elements wrapped inside should be shown or not
and the transition component manages 4 internal states:
Entering, Entered, Exiting, Exited